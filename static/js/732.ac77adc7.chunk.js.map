{"version":3,"file":"static/js/732.ac77adc7.chunk.js","mappings":"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","sources":["pages/MovieDetails/movieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledUl = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\nexport const StyledDiv = styled.div`\n  padding-top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchMovieById } from '../../services/moviesApi';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { StyledDiv, StyledUl } from './movieDetails.styled';\n\nconst basePosterPath = 'https://image.tmdb.org/t/p/w500';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const checkMovieById = async () => {\n      try {\n        const movieDetails = await fetchMovieById(id);\n        setMovie(movieDetails);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    checkMovieById();\n  }, [id]);\n\n  return (\n    <>\n      <Link to={backLink}>Go back</Link>\n\n      <StyledDiv>\n        {\n          <img\n            src={\n              movie.poster_path\n                ? [basePosterPath + movie.poster_path]\n                : defaultImg\n            }\n            width={250}\n            alt=\"poster\"\n          />\n        }\n        <div>\n          <h2>{movie.title}</h2>\n          <p>User Score: {Math.round(movie.vote_average)}</p>\n          <StyledUl>\n            {movie.overview && (\n              <li>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n              </li>\n            )}\n            <li>\n              {movie.genres && movie.genres.length > 0 && (\n                <div>\n                  <h4>Genres</h4>\n                  <StyledUl>\n                    {movie.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                  </StyledUl>\n                </div>\n              )}\n            </li>\n          </StyledUl>\n        </div>\n      </StyledDiv>\n      <div>\n        <h2>Additional information</h2>\n        <StyledUl>\n          <li>\n            <NavLink state={location.state} to=\"cast\">\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink state={location.state} to=\"reviews\">\n              Review\n            </NavLink>\n          </li>\n        </StyledUl>\n        <Outlet />\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'c7801c3e17ad740cf89f935e2a6b6746';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios(`trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(movieName) {\n  const response = await axios(\n    `search/movie?api_key=${API_KEY}&query=${movieName}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport const fetchCast = async id => {\n  const response = await axios(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["StyledUl","styled","_templateObject","_taggedTemplateLiteral","StyledDiv","_templateObject2","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","id","useParams","location","useLocation","backLink","state","from","useEffect","checkMovieById","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","fetchMovieById","sent","t0","console","log","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Link","to","src","poster_path","width","alt","title","Math","round","vote_average","overview","genres","length","map","genre","name","NavLink","Outlet","API_KEY","fetchTrendingMovies","_fetchTrendingMovies","_callee3","response","_context3","axios","concat","abrupt","data","results","fetchSearchMovies","_x","_fetchSearchMovies","_callee4","movieName","_context4","_x2","_fetchMovieById","_callee5","_context5","fetchCast","cast","_x3","fetchReviews","_ref2","_callee2","_context2","_x4"],"sourceRoot":""}